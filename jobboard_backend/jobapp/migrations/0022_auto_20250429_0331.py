# Generated by Django 4.2.17 on 2025-04-29 03:31

from django.db import migrations, models
from django.db.utils import ProgrammingError


def add_paystack_fields_if_missing(apps, schema_editor):
    # Get the database connection
    connection = schema_editor.connection
    
    # Check and add each field with a try-except to handle cases where the field already exists
    fields_to_add = [
        ("paystack_access_code", "VARCHAR(100) NULL"),
        ("paystack_authorization_url", "VARCHAR(200) NULL"),
        ("paystack_reference", "VARCHAR(100) NULL"),
    ]
    
    for field_name, field_type in fields_to_add:
        try:
            with connection.cursor() as cursor:
                # Check if the column exists
                cursor.execute(
                    """
                    SELECT column_name 
                    FROM information_schema.columns 
                    WHERE table_name = 'jobapp_payment' AND column_name = %s
                    """, 
                    [field_name]
                )
                if not cursor.fetchone():
                    # Column doesn't exist, so add it
                    cursor.execute(
                        f"ALTER TABLE jobapp_payment ADD COLUMN {field_name} {field_type}"
                    )
                    print(f"Added {field_name} column to jobapp_payment table")
                else:
                    print(f"Column {field_name} already exists in jobapp_payment table")
        except Exception as e:
            print(f"Error handling column {field_name}: {str(e)}")


def reverse_migration(apps, schema_editor):
    # No need to remove columns as they might be in use
    pass


class Migration(migrations.Migration):

    dependencies = [
        ("jobapp", "0021_alter_payment_reference"),
    ]

    operations = [
        # Use a safer approach with RunPython that only adds fields if they don't exist
        migrations.RunPython(add_paystack_fields_if_missing, reverse_migration),
    ]
